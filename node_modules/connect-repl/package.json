{
  "name": "connect-repl",
  "version": "0.0.4",
  "description": "Inject REPL as Connect or Express middleware",
  "keywords": [
    "repl",
    "connect",
    "express",
    "middleware",
    "debug",
    "interactive"
  ],
  "author": {
    "name": "Pavel Lang",
    "email": "langpavel@phpskelet.org"
  },
  "homepage": "https://github.com/langpavel/node-connect-repl",
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/langpavel/node-connect-repl.git"
  },
  "bugs": {
    "url": "https://github.com/langpavel/node-connect-repl/issues"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# node-connect-repl\n\nInject REPL into connect/express as middleware.\n\nMiddleware is loaded only in environment **other** than `production`\n\nFollowing is exported into REPL:\n * `last_req` -- last request object\n * `last_res` -- last response object\n * `stop` -- boolean. Set to true if you want \"set breakpoint\" in next request\n * `next` -- function. Call if you want to continue after `stop` request\n * `req` -- current request object when stopped\n * `res` -- current response object when stopped\n\n## REPL_EXPORT global function\n\nModule exports **global** function `REPL_EXPORT(name, value)` which can be called anywhere.\nProvided value is accesible by `name` in REPL.\n\n## Example\n\n```js\nvar express = require('express');\nvar app = express();\n\n// ...\napp.use(require('connect-repl')());\n\n// some routes...\n\napp.listen(3000);\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "connect-repl@0.0.4",
  "dist": {
    "shasum": "3372284b6599da1fc9868fb47a584745b54a4178"
  },
  "_from": "connect-repl@",
  "_resolved": "https://registry.npmjs.org/connect-repl/-/connect-repl-0.0.4.tgz"
}
